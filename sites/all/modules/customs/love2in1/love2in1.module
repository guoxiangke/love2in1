<?php
//module_invoke_all('wechat_message', $weObj);
function love2in1_wechat_message($weObj){
  $mp_services_config['account'] = 'love2in1@163.com';
  $mp_services_config['password'] = 'zhuaiheyi2009';
  $service_uid = '635';
  if(!is_array($weObj->Message(''))){ // add default option
    $type = $weObj->getRev()->getRevType();
    $FromUserName =  $weObj->getRev()->getRevFrom();
    $mp_member = love2in1_get_mp_member($FromUserName,$service_uid);

    if(!$mp_member) {
      mp_service_add_user($FromUserName,$last_cmd='old_user',$service_uid);
    }
    switch($type) {
     case Wechat::MSGTYPE_TEXT:
          $keyword =  trim($weObj->getRevContent());
           // $wechat_user_info = getUserInfo();
          $wechat_user_info = mp_service_update_user_info($weObj,$mp_services_config['account'],$mp_services_config['password'],$service_uid );

          $check_keyword = truncate_utf8($keyword, 2, $wordsafe = FALSE, $add_ellipsis = FALSE, $min_wordsafe_length = 1);

          //@url https://github.com/guoxiangke/love2in1/issues/5 
          //@response 回复1为他祷告！ funcution get_pray_detail!
          if(strpos($mp_member['last_cmd'], 'GET_PRAY：') !== false ) {
            //|| (strpos($mp_member['last_cmd'], 'PRAY_FOR：') !== false &&  is_numeric($keyword))
            $last_comments = explode(',', str_replace('GET_PRAY：', '', $mp_member['last_cmd']));
            if(is_numeric($keyword) && $keyword <= 5) {
              $cid = $last_comments[$keyword-1];
              mp_service_update_cmd('PRAY_FOR：' . $cid, $FromUserName, $service_uid);              
              $comment = comment_load($cid);
              $contentStr = $comment->comment_body[LANGUAGE_NONE][0]['value']."\n注意，下次您回复的任意内容（>5个字）作为代祷内容发送，否则请qx";
            }else{
              $contentStr = '指令回复不正确，请qx或一个小于5的数字...';
            }
            $weObj->text($contentStr)->reply();
          }
          //PRAY_FOR：
          if(strpos($mp_member['last_cmd'], 'PRAY_FOR：') !== false) {
            $pid = str_replace('PRAY_FOR：', '', $mp_member['last_cmd']);
            $contentStr = $keyword;
            if(strlen($keyword) >= 10) {
              // $cid = $last_comments[$keyword-1];          
              //comment_add!
              wx_comment_4love2in1('520',$keyword,$wechat_user_info,$pid);
              $contentStr = '[微笑]代祷成功发布！谢谢！';
              $contentStr .= "\n点击查看". url(NULL, array('absolute' => TRUE)) . (variable_get('clean_url', 0) ? '' : '?q=').'node/520';

              mp_service_update_cmd('qx',$FromUserName,$service_uid);
            }else{
              $contentStr = '代祷内容不能少于10个字，请qx或。。。';
            }
            $weObj->text($contentStr)->reply();
          }

          if ($check_keyword == '建议' || $check_keyword == '意见') {
            mp_service_update_cmd($check_keyword,$FromUserName,$service_uid);
            $wechat_user_info = mp_service_get_user_info($weObj,$mp_services_config['account'],$mp_services_config['password'],$service_uid);
            wx_comment('1243',$keyword,$wechat_user_info);
            $contentStr ="[微笑]".$check_keyword."信息已收到![调皮]谢谢反馈！";
            $weObj->text($contentStr)->reply();
          }
         if ($check_keyword == '祷告' || $check_keyword == '代祷') {
             // $reply = _mp_node_create($keyword);
             //201+您想说的话
             if(strlen($keyword) < 10 ) {
                 $contentStr = $check_keyword."内容不能少于10字！";
             }else{
                 $mp_service_records = mp_service_get_record($FromUserName);
                 if(0&&$mp_service_records['last_cmd'] == $check_keyword) {
                     $contentStr = "每天只需发布一条信息，请明天再来吧！\n";
                 }else{
                     mp_service_update_cmd($check_keyword,$FromUserName,$service_uid);
                     //getUserInfo
                     // watchdog('getRevFrom', '<pre>'.print_r($weObj->getRevFrom(),true), array(), WATCHDOG_NOTICE, 'link');
                     // watchdog('getUserInfo', '<pre>'.print_r($weObj->getUserInfo($weObj->getRevFrom()),true), array(), WATCHDOG_NOTICE, 'link');
                     // watchdog('getUserList', '<pre>'.print_r($weObj->getUserList(),true), array(), WATCHDOG_NOTICE, 'link');
                     // watchdog('getRev', '<pre>'.print_r($weObj->getRev(),true), array(), WATCHDOG_NOTICE, 'link');
                     // $wechat_user_info = mp_service_get_user_info($weObj,$mp_services_config['account'],$mp_services_config['password'],$service_uid);
                     $wechat_user_info = $weObj->getUserInfo($weObj->getRevFrom());
                     // wx_comment('520',$keyword,$wechat_user_info);
                     $pid = 0;
                     wx_comment_4love2in1('520',$keyword,$wechat_user_info,$pid);
                     $contentStr ="[微笑]".$check_keyword."信息已收到![调皮]\n点击查看". url(NULL, array('absolute' => TRUE)) . (variable_get('clean_url', 0) ? '' : '?q=').'node/520';
                 }
             }
             # code...
             $weObj->text($contentStr)->reply();
         }
          if($keyword == 'qx' || $keyword == '否') {
              mp_service_update_cmd('qx',$FromUserName,$service_uid);
              $weObj->text("指令已取消！\n回复建议+内容，提出意见！")->reply();
          }
          $help_keywords = array('帮助','?','？','不会用');
          if( in_array($keyword, $help_keywords) || in_array($check_keyword, $help_keywords) ) {
            $help_content = '用户输入”帮助“  查看功能的使用说明?内容';
            $img = array(
              'Title'=>'用户输入”帮助“  查看功能的使用说明?内容',
              'Description'=>'内容摘要，摘要60字，可以文字或单条图文来解释说明。',
              'PicUrl'=>'https://farm9.staticflickr.com/8526/8499223554_c1fc3b888f.jpg',
              'Url'=>'http://mp.weixin.qq.com/s?__biz=MjM5ODQ4NjU4MA==&mid=200643642&idx=1&sn=9a6da3075bba7f5001bd5a57ab9f1c6d#rd'
            );
            $news[] = $img;
            //单图文 标题15字 摘要60字
            //多图文 1标题16字 2标题15字
            $weObj->news($news)->reply();
            $weObj->text($help_content)->reply();
          }
          //begin
          if (filter_var($keyword, FILTER_VALIDATE_EMAIL)) {
              // e-mail address
              mp_service_update_cmd('email:'.$keyword,$FromUserName,$service_uid);
              $weObj->text("第一步成功！第二步，请输入您在主爱合一网站的登陆密码进行最终绑定！")->reply();
          }
          if(!$mp_member['uid']){//绑定...
            if(!(strpos($mp_member['last_cmd'], 'email') === false)){//was found
              //接收密码，回复【qx】取消绑定
              $email = strstr($mp_member['last_cmd'], ':');
              $email =  str_replace(':', '', $email);
              $password = $keyword;
              $bind_uid = love2in1_bind($FromUserName,$email,$password,$service_uid);
              if($bind_uid){
                //sucess
                $member = love2in1_get_memeber_by_id($bind_uid);
                $weObj->text($member['nickname'].(($member['sex'] == 'f')?'姊妹':'弟兄')."，恭喜您绑定成功！现在点击”查看私信“，看看谁给您写过信吧～不过要有平常心哦～因为神早已预备！")->reply();
                //
              }else{
                //error password or email!!!
                $weObj->text("哦～ 您输入的密码不对呀，淡定，再输入一次试试吧～\n(实际情况是密码或邮箱不对！)")->reply();
              }
            }
          }else{
            // login user
            if(!(strpos($mp_member['last_cmd'], 'readmsg') === false)){
                $readmsg = strstr($mp_member['last_cmd'], ':');
                $msg_id =  str_replace(':', '', $readmsg);
                $new_message = $keyword;
                mp_service_update_cmd('msg_reply:'.$msg_id.':'.$keyword,$FromUserName,$service_uid);
                $msg = love2in1_get_message_by_id($msg_id);
                $weObj->text("是否将您发送的私信内容回复给".$msg['sendfrom']."\n回复“是”发送私信\n回复“否”取消发送")->reply();
            }
            if(!(strpos($mp_member['last_cmd'], 'msg_reply') === false) && $keyword == '是'){
                
                $last_cmd = explode(':', $mp_member['last_cmd']);
                $msg_id =  $last_cmd[1];
                $msg =  $last_cmd[2];
                // $new_message = $keyword;
                 $old_message = love2in1_get_message_by_id($msg_id);
                 $fields = array(
                    'title' =>'Re:'.$old_message['title'],
                    'content' =>$msg,
                    'sendfrom' =>$old_message['sendto'],
                    'sendto' =>$old_message['sendfrom'],
                    'status' =>'send',
                    'sendtime' =>time(),
                    );
                $new_msg_id = love2in1_new_message($fields);
                if($new_msg_id){
                  $weObj->text('您的私信已经成功发送给了'.$old_message['sendfrom'].'！
点击“查看私信”，查看其他人给您的私信
回复“建议 +内容”，您可以给我们提建议哦！
点击“365”，
点击“听”')->reply();
                  mp_service_update_cmd('qx',$FromUserName,$service_uid);
                }else{
                   $weObj->text("发送失败！\n回复建议+内容，提出意见！")->reply();
                }
            }

          }
          //end 
          
          if (is_numeric($keyword) && $keyword>10000 && love2in1_isbind($FromUserName,$service_uid)) {
              $msg_id = $keyword;
              $msg = love2in1_get_message_by_id($msg_id);
              if ($msg['sendto'] != $mp_member['nickname']) {
                 $weObj->text("笑而不语^_^\n回复建议+内容，提出意见！")->reply();
              }
              mp_service_update_cmd('readmsg:'.$msg_id,$FromUserName,$service_uid);
              $img = array(
                  'Title'=> $msg['sendfrom'].' '.date("n月j日",$msgObj->sendtime)."给您的私信内容如下：▼ ",
                  // ."▼不想发送请回复qx\n 注意，您下次回复的内容即可给ta，",
                  'Description'=>'',
                  'PicUrl'=>'http://ybzx.u.qiniudn.com/love2in1/message2.png',
                  'Url'=>''
                );
              $news[] = $img;
              $img = array(
                  'Title'=> $msg['content'] ."\n------------------\n直接输入内容，回信给".$msg['sendfrom']."吧\n如果不想回信，可以输入”qx“哦",
                  'Description'=>'',
                  'PicUrl'=>'',
                  'Url'=>''
                );
              $news[] = $img;
              $weObj->news($news)->reply(); 
          }

          $weObj->service("用户输入的内容不能识别时，随机回复一段经文???这个。。。")->reply();
        break;
      case Wechat::MSGTYPE_EVENT:
        $event = $weObj->getRevEvent();
        if(!$event){
          break;
        }else if($event['event']=='subscribe'){
          // $weObj->text(variable_get("wechat_follow_message", variable_get("wechat_default_message", 'Hi, WeChat!')));
           $img = array(
              'Title'=>'主爱合一简史',
              'Description'=>'合一互动服务号目前主要提供私信交流和听两个功能。通过私信交流就可以用手机和主爱合一的其他弟兄姊妹交流了。听主要是我们精心准备的讲道信息。',
              'PicUrl'=>'https://farm8.staticflickr.com/7317/8730739154_7a2706fd27.jpg',
              'Url'=>'http://mp.weixin.qq.com/s?__biz=MjM5ODQ4NjU4MA==&mid=200643642&idx=1&sn=9a6da3075bba7f5001bd5a57ab9f1c6d#rd'
            );
           $news[] = $img;
            //单图文 标题15字 摘要60字
            //多图文 1标题16字 2标题15字
            $weObj->news($news)->reply();

        }
        else if($event['event']=='CLICK') {   

          if($event['key'] == 'CMD_Cancel'){
            mp_service_update_cmd('qx',$FromUserName,$service_uid);
            $weObj->text("指令已取消！\n回复建议+内容，提出意见！")->reply();
          }

          if($event['key'] == 'GET_PRAY' || $event['key'] == 'pray'){
            $nid = '520';
            $comments = comment_get_recent_by_nid($nid,5);
            $contentStr = '';
            foreach ($comments as $key => $comment) {
              $contentStr .= "●【".($key+1)."】".$comment->subject."\n";
              //“祷告+ ".$comment->cid."+祷告内容 ”为他代祷
              $get_comments[] = $comment->cid;
              # code...（代祷事项ID为他祷告）
            } 
            $contentStr .= "\n回复1~5为他祷告！";
            mp_service_update_cmd('GET_PRAY：'.implode(',', $get_comments),$FromUserName,$service_uid);
            $img = array(
              'Title'=>'祷告墙',
              'Description'=>'提前2:1 我劝你，第一要为万人恳求、祷告、代求、祝谢。 雅5:16 所以你们要彼此认罪，互相代求，使你们可以得医治。',
              'PicUrl'=>'https://farm8.staticflickr.com/7317/8730739154_7a2706fd27.jpg',
              'Url'=>'http://mp.weixin.qq.com/s?__biz=MjM5ODQ4NjU4MA==&mid=200643642&idx=1&sn=9a6da3075bba7f5001bd5a57ab9f1c6d#rd'
            );
           $news[] = $img;
            $img = array(
              'Title'=>$contentStr,
              'Description'=>'',
              'PicUrl'=>'',
              'Url'=>''
            );
           $news[] = $img;
            //单图文 标题15字 摘要60字
            //多图文 1标题16字 2标题15字
            $weObj->news($news)->reply();
            exit;    
          }          
          if($event['key'] == 'GET_SONG'){
            // $news = ybzx_get_nodes($type = 'article', $counts = 1);
            // $weObj->news($news)->reply(); exit;
            $nodes = ybzx_get_nodes($content_type = 'article', $counts = 1, $type = 'nodes');
            $title = $nodes[0]->title;
            if(isset($nodes[0]->field_wechat_url[LANGUAGE_NONE][0]['value'])) {
              $musicurl = $nodes[0]->field_wechat_url[LANGUAGE_NONE][0]['value'];
            }else{
              $uri = $nodes[0]->field_mp3[LANGUAGE_NONE][0]['uri'];
              $musicurl = file_create_url($uri);
            }             
            //http://audio.liangyou.net/download.php?t=1&c=vmf&f=vmf131101.mp3
            $desc = "主爱合一,永不止息！love2in1 合一互动";
            $hgmusicurl = $musicurl;
            $weObj->music($title, $desc, $musicurl, $hgmusicurl)->reply();
            exit;            
          }
          if($event['key'] == 'GET_MSG'){

            if(!love2in1_isbind($FromUserName,$service_uid)){
              //您还没绑定，请回复【email】请回复密码！
              $weObj->text("咦，您还没有绑定主爱合一网的注册帐号，不要急，再来一次～\n请输入您在主爱合一网站的注册邮箱进行帐号绑定。")->reply();
              return;
            }


            // $unread_count = love2in1_get_unreader_messages_count($mp_member['nickname']);
            $img = array(
                'Title'=> '▼回复私信编号查看私信内容',//，您有('.$unread_count.')条未读私信▼
                'Description'=>'',
                'PicUrl'=>'http://ybzx.u.qiniudn.com/love2in1/webwxgetmsgimg.jpg',//http://www.yongbuzhixi.com/sites/all/themes/love/family_1.png
                'Url'=>'http://www.3dedu.net/my_mailbox_inbox.php'
              );
            $news[] = $img;
            $messages = love2in1_get_messages($mp_member['nickname'],10);
            $messages_return = ''; 
            if(count($messages)) {
              foreach ($messages as $key => $msgObj) {
                $messages_return .= '回复【'.$msgObj->id.'】查看'.$msgObj->sendfrom.date("n月j日",$msgObj->sendtime).'发给您的私信'."\n" ;//.(!($msgObj->ifread)?'*new':'')
              }
              $img = array(
                'Title'=> $messages_return,//▌◤▲▼
                'PicUrl'=>'',
                'Url'=>''
              );
            }else{
              $messages_return = '暂无未读私信！！！还没有人给你私信哦！^_^'; 
              $img = array(
                'Title'=> $messages_return,
                'PicUrl'=>'http://ybzx.u.qiniudn.com/love2in1/message.png',
                'Url'=>''
              );
            }
            mp_service_update_cmd('GET_MSG',$FromUserName,$service_uid);
            
            $news[] = $img;

            //admin messages begin
            $admin_messages = love2in1_get_admin_messages($mp_member,$rang = 4);
            //admin messages end
            foreach ($admin_messages as $key => $msgObj) {
              if(love2in1_admin_message_isread($msgObj->id,$mp_member['uid'])) continue;
              $content = '['.$msgObj->title.']-管理员 '.date("n月j日",$msgObj->sendtime).'来信:'."\n".$msgObj->content;//.
              
              $img = array(
                  'Title'=> $content,
                  'PicUrl'=>'',
                  'Url'=>'http://www.3dedu.net/my_mailbox_read_letter_manage.php?id='.$msgObj->id,
                );
              $news[] = $img;
            }
            $weObj->news($news)->reply();
            exit;            
          }
          // $message = _wechat_menu_default_message($event);
          // $message && $weObj->text($message);
        }
        break;
    }
  }
  if(!is_array($weObj->Message(''))){
    // $weObj->text(variable_get("wechat_default_message", "Hi, WeChat!"));
  }
  // $weObj->reply();
  exit;
}

function love2in1_get_unreader_messages_count($nickname){
      $newmail_count = 0;
      $result = Database::getConnection('default', 'love2in1')->select('mail', 'p')
        ->fields('p')
        ->condition('sendto',$nickname)
        ->condition('ifread',0)
        ->condition('status','send')
        ->condition('to_del','1','!=')
        ->execute();//'xiangkeguo@gmail.com'
      $newmail_count = $result->rowCount();
      return $newmail_count;
}
/**
 * array(0=>obj)
 */
function love2in1_get_messages($nickname,$rang = 9){
      $result = Database::getConnection('default', 'love2in1')->select('mail', 'p')
        ->fields('p')
        ->condition('sendto',$nickname)
        ->condition('ifread',0) //unreader
        ->condition('status','send')
        ->condition('to_del','1','!=')
        // ->condition('from_del','1','!=')
        ->orderBy('id', 'DESC')//ORDER BY created
        ->range(0,$rang)
        ->execute() 
        ->fetchAll();
      return $result;
}
function love2in1_get_admin_messages($mp_member,$rang = 3){
      
      $member = love2in1_get_memeber_by_id($mp_member['uid']);
      
      $result = Database::getConnection('default', 'love2in1')->select('mail_admin', 'p')
        ->fields('p')
        ->where("(sex = '".$member['sex']."' or sex = '') 
          and ( 
                (province = '".$member['province']."'
                  and city = '".$member['city']."'
                ) 
                or (province = '".$member['province']."' and city = 0) 
                or (province = 0 and city = 0) 
              ) 
          and (member_id = 11833 or member_id = 0 ) 
          and (sendtime >'".$member['regtime']."')"
        ) 
        ->orderBy('id', 'DESC')//ORDER BY created
        ->range(0,$rang)
        ->execute() 
        ->fetchAll();
      return $result;
}

function love2in1_admin_message_isread($id,$member_id){
  $result = Database::getConnection('default', 'love2in1')->select('mail_admin_read', 'p')
    ->fields('p')
    ->condition('mail_id',$id)
    ->condition('member_id',$member_id)
    ->execute() 
    ->fetchAll();
  return count($result);
}
function love2in1_get_message_by_id($id){
  $result = Database::getConnection('default', 'love2in1')->select('mail', 'p')
    ->fields('p')
    ->condition('id',$id)
    ->execute()
    ->fetchAssoc();
  if($result['ifread'] == 0){
    Database::getConnection('default', 'love2in1')
      ->update('mail')//https://api.drupal.org/api/drupal/includes!database!database.inc/function/db_update/7
      ->fields(array('ifread' => '1',))
      ->condition('id',$id)
      ->execute();
  }
  return $result;
}

function love2in1_new_message($fields){
  //   $db->table = $tbl_mail;
  // $db->columns = "title, content, sendfrom, sendto, status, sendtime";
  // $db->data = "$title+&&+$content+&&+{$_SESSION['ssec_nickname']}+&&+$sendto+&&+$status+&&+".time();
  // $db->delimiter = '+&&+';
  // $db->mysql_add();

  // $fields = array(
  //   'title' =>,
  //   'content' =>,
  //   'sendfrom' =>,
  //   'sendto' =>,
  //   'status' =>,
  //   'sendtime' =>time(),
  //   );
  $result = Database::getConnection('default', 'love2in1')->insert('mail')
    ->fields($fields)
    ->execute();   
    return $result ;
}
/**
 * id (String, 5 characters ) 11833
    email (String, 20 characters ) xiangkeguo@gmail.com
    pwd (String, 8 characters ) bWprNW5q
    nickname (String, 12 characters ) 天空蔚蓝
    sex (String, 1 characters ) m
    marriage (String, 1 characters ) 1
    province (String, 2 characters ) 11
    city (String, 4 characters ) 1105
    birth_year (String, 4 characters ) 1987
    birth_month (String, 2 characters ) 12
    birth_day (String, 4 characters ) 1211
    height (String, 3 characters ) 172
    degree (String, 1 characters ) 3
    income (String, 1 characters ) 3
    note (String, 102 characters ) 爱是永不止息，爱是不求自己的益��...
    note_ifpass (String, 1 characters ) 1
    note_modify_time (String, 10 characters ) 1368445937
    faith (String, 1 characters ) 1
    regtime (String, 10 characters ) 1346110589
    needage_min (String, 2 characters ) 22
    needage_max (String, 2 characters ) 26
    needheight_min (String, 1 characters ) 1
    needheight_max (String, 1 characters ) 6
    needmarriage (String, 1 characters ) 1
    needdegree (String, 1 characters ) 1
    needdegree_up (String, 0 characters )
    needphoto (String, 1 characters ) 1
    needcert (String, 1 characters ) 1
    needfaith (String, 1 characters ) 0
    love1_location (String, 2 characters ) 11
    love1_sublocation (String, 4 characters ) 1100
    love2_location (String, 2 characters ) 41
    love2_sublocation (String, 4 characters ) 4117
    love3_location (String, 1 characters ) 0
    love3_sublocation (String, 1 characters ) 0
    love4_location (String, 1 characters ) 0
    love4_sublocation (String, 1 characters ) 0
    love5_location (String, 1 characters ) 0
    love5_sublocation (String, 1 characters ) 0
    ifuseneed (String, 1 characters ) 0
    useneed (String, 0 characters )
    ifvalid (String, 1 characters ) 1
    hash (NULL)
    photo (String, 23 characters ) 20131226/1388067870.jpg
    photo1 (String, 23 characters ) 20121018/1350554859.jpg
    photo2 (String, 23 characters ) 20121227/1356614697.jpg
    photo3 (String, 23 characters ) 20131226/1388067870.jpg
    photo4 (NULL)
    photo5 (NULL)
    photo1_ifpass (String, 1 characters ) 1
    photo2_ifpass (String, 1 characters ) 1
    photo3_ifpass (String, 1 characters ) 1
    photo4_ifpass (String, 1 characters ) 0
    photo5_ifpass (String, 1 characters ) 0
    photo1_modtime (String, 10 characters ) 1350554859
    photo2_modtime (String, 10 characters ) 1356614697
    photo3_modtime (String, 10 characters ) 1388067870
    photo4_modtime (String, 10 characters ) 1350555001
    photo5_modtime (NULL)
    photo_showtype (String, 1 characters ) 1
    friend_status (String, 1 characters ) 1
    nationality (String, 0 characters )
    blood (String, 1 characters ) 1
    constellation (String, 0 characters )
    star (String, 0 characters )
    home_province (String, 2 characters ) 41
    home_city (String, 4 characters ) 4117
    nation (String, 1 characters ) 1
    child (String, 0 characters )
    speciality (String, 2 characters ) 15
    decide_year (String, 0 characters )
    decide_month (String, 0 characters )
    decide_day (String, 0 characters )
    wash_year (String, 0 characters )
    wash_month (String, 0 characters )
    wash_day (String, 0 characters )
    wash_place (String, 0 characters )
    company (String, 0 characters )
    industry (String, 0 characters )
    income_desc (String, 0 characters )
    company_type (String, 0 characters )
    university (String, 0 characters )
    hause (String, 1 characters ) 3
    auto (String, 0 characters )
    costmost (String, 0 characters )
    paihang (String, 0 characters )
    smoke (String, 0 characters )
    drink (String, 0 characters )
    sport (String, 0 characters )
    livecust (String, 0 characters )
    language (String, 0 characters )
    space (String, 0 characters )
    pet (String, 0 characters )
    romance (String, 0 characters )
    important_person (String, 0 characters )
    imt_person_reason (String, 0 characters )
    parent_together (String, 0 characters )
    child_want (String, 0 characters )
    interest (String, 0 characters )
    charac (String, 0 characters )
    interest_movie (String, 0 characters )
    interest_music (String, 0 characters )
    interest_sport (String, 0 characters )
    interest_food (String, 0 characters )
    interest_book (String, 0 characters )
    interest_place (String, 0 characters )
    weight (String, 0 characters )
    beau (String, 0 characters )
    shape (String, 0 characters )
    hair_style (String, 0 characters )
    face_type (String, 0 characters )
    truename (String, 0 characters )
    idcard (String, 0 characters )
    mobile (String, 0 characters )
    phone (String, 0 characters )
    homepage (String, 0 characters )
    address (String, 0 characters )
    postcode (String, 0 characters )
    this_login_time (String, 10 characters ) 1404278454
    last_login_time (String, 10 characters ) 1388067296
    online_status (String, 1 characters ) 1
    visitcount (String, 3 characters ) 105
    ifhomepage (String, 1 characters ) 0
    visit_list (String, 258 characters ) ,8776,,16186,18779,18721,,18721,,7198,14650,171...
    certlevel (String, 1 characters ) 0
    email_counter (String, 1 characters ) 0
 */
function love2in1_get_memeber_by_id($id) {
  $result = Database::getConnection('default', 'love2in1')->select('member', 'p')
    ->fields('p')
    ->condition('id',$id)
    ->execute()
    ->fetchAssoc();
  return $result;
}

function love2in1_bind($FromUserName,$email,$password,$service_uid) {
  //邮箱，密码验证
  $query = Database::getConnection('default', 'love2in1')->select('member', 'p')
    ->fields('p', array('pwd','id','nickname'))
    ->condition('email',$email)
    ->execute();//'xiangkeguo@gmail.com'
  foreach ($query as $record) {
    // Do something with each $record
    if($record->pwd == base64_encode($password)) {//the password way!!! bWprNW5q
      $fields['uid'] = $record->id;
      $fields['nickname'] = $record->nickname;
      mp_service_update($FromUserName,$service_uid,$fields);
      // mp_service_update($FromUserName,'uid',$uid,$service_uid);
      // mp_service_update($FromUserName,'nickname',$nickname,$service_uid);
      return $record->id;
    }else{
      return FALSE;
    }
  }
}
//isbind return 1;
//if not bind!
function love2in1_isbind($FromUserName,$service_uid){
  $wechat_user = love2in1_get_mp_member($FromUserName,$service_uid);
  if($wechat_user['uid']){//binded!!!
    return TRUE;
  }else{
    return false;
    // mp_service_update($FromUserName,'uid',get_uid_from_love2in1(),$service_uid);  
  }
}
function love2in1_get_nickname($FromUserName,$service_uid){
  $wechat_user = love2in1_get_mp_member($FromUserName,$service_uid);
  return $wechat_user['nickname']?$wechat_user['nickname']:FALSE;
}
/**
 * return
 Array
    (
        [uid] => 11833
        [fromusername] => owzhjuLh3OkTPbhgn5CaG09YXxHE
        [created] => 1404122164
        [last_cmd] => update_contact_info
        [last_cmd_timestamp] => 1404184318
        [fakeid] => 3773415
        [groupid] => 0
        [nickname] => 天空蔚蓝
        [wxid] => 
        [unsubscribe] => 0
        [picture] => 0
        [wxnickname] => 天空蔚蓝
        [contact_info] => a:10:{s:7:"fake_id";i:3773415;s:9:"nick_name";s:12:"天空蔚蓝";s:9:"user_name";s:0:"";s:9:"signature";s:63:"我只仰望你！天空依然蔚蓝，虽然有时你看不见";s:4:"city";s:6:"朝阳";s:8:"province";s:6:"北京";s:7:"country";s:6:"中国";s:6:"gender";i:1;s:11:"remark_name";s:0:"";s:8:"group_id";i:0;}
        [mp_uid] => 635
    )
 */
function love2in1_get_mp_member($FromUserName,$service_uid) {
  $result = db_select('mp_service', 'c')
    ->fields('c')
    ->condition('fromusername', $FromUserName)
    ->condition('mp_uid', $service_uid)
    ->execute()
    ->fetchAssoc();
  return $result;
}


/**
 * Find the most recent comments that are available to the current user.
 *
 * @param integer $number
 *   (optional) The maximum number of comments to find. Defaults to 10.
 *
 * @return
 *   An array of comment objects or an empty array if there are no recent
 *   comments visible to the current user.
 */
function comment_get_recent_by_nid($nid,$number = 10) {
  $query = db_select('comment', 'c');
  $query->innerJoin('node', 'n', 'n.nid = c.nid');
  $query->addTag('node_access');
  $comments = $query
    ->fields('c')
    ->condition('n.nid', $nid)
    ->condition('c.pid', 0)
    ->condition('c.status', COMMENT_PUBLISHED)
    // ->condition('n.status', NODE_PUBLISHED
    ->orderBy('c.created', 'DESC')
    // Additionally order by cid to ensure that comments with the same timestamp
    // are returned in` the exact order posted.
    ->orderBy('c.cid', 'DESC')
    ->range(0, $number)
    ->execute()
    ->fetchAll();

  return $comments ? $comments : array();
}
/**
 * $wechat_user_info
 Array
(
    [subscribe] => 1
    [openid] => owzhjuLh3OkTPbhgn5CaG09YXxHE
    [nickname] => 天空蔚蓝
    [sex] => 1
    [language] => zh_CN
    [city] => 朝阳
    [province] => 北京
    [country] => 中国
    [headimgurl] => http://wx.qlogo.cn/mmopen/PiajxSqBRaEKpjTUkUvbSvHeUyjQO47Mg8uZRr51qBDYO0z6Bj24JxIibwicXOqd3lhSvshUqaj3z9zzuR6hcDB2Q/0
    [subscribe_time] => 1407801187
    [unionid] => o2T-ljnxRQRqmsLUfABb0aX-5e6E
    [remark] => 
)
*/

function wx_comment_4love2in1($nid,$keyword,$wechat_user_info=array(),$pid=0) {//,
  ///////
                  $comment = new stdClass();

                  $comment->nid = $nid; // nid of a node you want to attach a comment to
                  $comment->cid = 0; // leave it as is
                  $comment->pid = $pid; // parent comment id, 0 if none 
                  $comment->uid = 0; // user's id, who left the comment
                  
                  $comment->mail = '';//isset($wechat_user_info['openid'])?$wechat_user_info['openid'].'@yongbuzhixi.com':'anno@duoenjia.com';// // user's email wechat_user_info
                  //a:10:{s:7:"fake_id";i:2553430760;s:9:"nick_name";s:6:"麦青";s:9:"user_name";s:10:"maiqing-py";s:9:"signature";s:31:"在心中修篱种菊..........";s:4:"city";s:6:"昆明";s:8:"province";s:6:"云南";s:7:"country";s:6:"中国";s:6:"gender";i:2;s:11:"remark_name";s:0:"";s:8:"group_id";i:108;}
// $comment->thread = '01/'; // OPTIONAL. If you need comments to be threaded you can fill this value. Otherwise omit it.
                  $comment->name = isset($wechat_user_info['nickname'])?$wechat_user_info['nickname']:'微信用户';//; // If user is authenticated you can omit this field, it will be auto-populated, if the user is anonymous and you want to name him somehow, input his name here
                  // $comment->thread = '01/'; // OPTIONAL. If you need comments to be threaded you can fill this value. Otherwise omit it.
                  $comment->hostname = $_SERVER['REMOTE_ADDR'] ;// OPTIONAL. You can log poster's ip here
                  $comment->created = time(); // OPTIONAL. You can set any time you want here. Useful for backdated comments creation.
                  $comment->is_anonymous = 0; // leave it as is
                  $comment->homepage = ''; // you can add homepage URL here
                  $comment->status = COMMENT_PUBLISHED;//COMMENT_PUBLISHED; // We auto-publish this comment
                  $comment->language = LANGUAGE_NONE; // The same as for a node
                  // $keyword = substr($keyword, 2);
                  $subject = truncate_utf8($keyword, 15, $wordsafe = FALSE, $add_ellipsis = FALSE, $min_wordsafe_length = 1);
                  $comment->subject = $subject; 
                  
                  // $comment->signature = '';//$wechat_user_info['contact_info']['signature'] ;
                  
                  // $comment->signature_format = 'filtered_html'; 
                  $comment->comment_body[$comment->language][0]['value'] = $keyword; // Everything here is pretty much like with a node
                  $comment->comment_body[$comment->language][0]['format'] = 'filtered_html'; 
                  // $comment->field_custom_field_name[LANGUAGE_NONE][0]['value'] = 'Some value'; // OPTIONAL. If your comment has a custom field attached it can added as simple as this // preparing a comment for a save
                   // saving a comment
                  ///////////end
                  if($comment = comment_submit($comment)) { // Prepare node for saving                      
                      comment_save($comment);
                      return $comment;
                  }
}
///////////////////报名参加文字修改begin/////////////////////////////
/**
 * Implement hook_field_formatter_info().
 */
function love2in1_field_formatter_info() {
  return array(
    'og_group_subscribe' => array(
      'label' => t('OG subscribe link'),
      'field types' => array('list_boolean'),
      'settings' => array(
        'field_name' => FALSE,
      ),
    ),
    'og_list_default' => array(
      'label' => t('OG audience list'),
      'field types' => array('entityreference'),
    ),
  );
}


/**
 * Implements hook_field_formatter_view().
 */
function love2in1_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  global $user;

  $settings = $display['settings'];

  switch ($display['type']) {
    case 'og_group_subscribe':
      $account = clone $user;
      if (!og_is_group($entity_type, $entity)) {
        return;
      }

      if (!empty($entity->uid) && ($entity->uid == $account->uid)) {
        // User is the group manager.
        $element[0] = array(
          '#type' => 'html_tag',
          '#tag' => 'span',
          '#attributes' => array('title' => t('You are the group manager'), 'class' => 'group manager'),
          '#value' => t('You are the group manager'),
        );

        return $element;
      }

      list($id,, $bundle) = entity_extract_ids($entity_type, $entity);
      if (og_is_member($entity_type, $id, 'user', $account, array(OG_STATE_ACTIVE, OG_STATE_PENDING))) {
        if (og_user_access($entity_type, $id, 'unsubscribe', $account)) {
          $links['title'] = t('Unsubscribe from group');
          $links['href'] = "group/$entity_type/$id/unsubscribe";
          $links['class'] = 'group unsubscribe';
        }
      }
      else {
        if (og_is_member($entity_type, $id, 'user', $account, array(OG_STATE_BLOCKED))) {
          // If user is blocked, they should not be able to apply for
          // membership.
          return;
        }

        // Check if user can subscribe to the field.
        if (empty($settings['field_name']) && $audience_field_name = og_get_best_group_audience_field('user', $account, $entity_type, $bundle)) {
          $settings['field_name'] = $audience_field_name;
        }
        if (!$settings['field_name']) {
          return;
        }

        $field_info = field_info_field($settings['field_name']);

        // Check if entity is referencable.
        if ($field_info['settings']['target_type'] != $entity_type) {
          // Group type doesn't match.
          return;
        }
        if (!empty($field_info['settings']['handler_settings']['target_bundles']) && !in_array($bundle, $field_info['settings']['handler_settings']['target_bundles'])) {
          // Bundles don't match.
          return;
        }

        if (!og_check_field_cardinality('user', $account, $settings['field_name'])) {
          $element[0] = array(
            '#type' => 'html_tag',
            '#tag' => 'span',
            '#attributes' => array('title' => format_plural($field_info['cardinality'], 'You are already registered to another group', 'You are already registered to @count groups'), 'class' => 'group other'),
            '#value' => format_plural($field_info['cardinality'], 'You are already registered to another group', 'You are already registered to @count groups'),
          );
          return $element;
        }

        $url = "group/$entity_type/$id/subscribe";
        if ($settings['field_name']) {
          $url .= '/' . $settings['field_name'];
        }

        if (og_user_access($entity_type, $id, 'subscribe without approval', $account)) {
          $links['title'] = t('Subscribe to group');
          $links['class'] = 'group subscribe';
          if ($account->uid) {
            $links['href'] = $url;
          }
          else {
            $links['href'] = 'user/login';
            $links['options'] = array('query' => array('destination' => $url));
          }
        }
        elseif (og_user_access($entity_type, $id, 'subscribe')) {
          $links['title'] = t('Request group membership');
          if($entity->type == 'event') $links['title'] = '报名参加';
          $links['class'] = 'group subscribe request';
          if ($account->uid) {
            $links['href'] = $url;
          }
          else {
            $links['href'] = 'user/login';
            $links['options'] = array('query' => array('destination' => $url));
          }
        }
        else {
          $element[0] = array(
            '#type' => 'html_tag',
            '#tag' => 'span',
            '#attributes' => array('title' => t('This is a closed group. Only a group administrator can add you.'), 'class' => 'group closed'),
            '#value' => t('This is a closed group. Only a group administrator can add you.'),
          );

          return $element;
        }
      }

      if (!empty($links['title'])) {
        $links += array('options' => array('attributes' => array('title' => $links['title'], 'class' => array($links['class']))));
        $element[0] = array(
          '#type' => 'link',
          '#title' => $links['title'],
          '#href' => $links['href'],
          '#options' => $links['options'],
        );
        return $element;
      }
      // User didn't have permissions.
      break;

    case 'og_list_default':
      $accessible_ids = array();
      $private = FALSE;
      $wrapper = entity_metadata_wrapper($entity_type, $entity);
      $field_name = $field['field_name'];
      if (!$wrapper->{$field_name}->value()) {
        return;
      }
      if ($field['cardinality'] == 1) {
        // Single-value field.
        if ($wrapper->{$field_name}->entityAccess('view')) {
          $id = $wrapper->{$field_name}->getIdentifier();
          $accessible_ids[$id] = TRUE;
        }
        else {
          $private = TRUE;
        }
      }
      else {
        // Multi-value field.
        foreach ($wrapper->{$field_name} as $wrapper_field) {
          $id = $wrapper_field->value(array('identifier' => TRUE));
          if ($wrapper_field->entityAccess('view')) {
            $accessible_ids[$id] = TRUE;
          }
          else {
            $private = TRUE;
          }
        }
      }

      if ($entity_type == 'user') {
        // Show only the groups a user is active in.
        foreach ($wrapper->{$field_name . '__og_membership'}->value() as $og_membership) {
          if ($og_membership->state != OG_STATE_ACTIVE) {
            unset($accessible_ids[$og_membership->gid]);
          }
        }
      }
      $group_type = $field['settings']['target_type'];
      $accessible_entity = entity_load($group_type, array_keys($accessible_ids));
      $element = array();
      foreach ($items as $delta => $item) {
        if (!empty($accessible_ids[$item['target_id']]) && !empty($accessible_entity[$item['target_id']])) {
          $wrapper = entity_metadata_wrapper($group_type, $item['target_id']);
          $element[$delta] = array(
            '#type' => 'link',
            '#title' => $wrapper->label(),
            '#href' => $wrapper->url->value(),
            // Add the group type and group ID, so it's easier for implementing
            // modules to extend the formatter.
            '#group_type' => $group_type,
            '#gid' => $wrapper->getIdentifier(),
          );
        }
      }
      if ($private) {
        $count = count($element);
        $delta = $count == 0 ? 0 : $count + 1;
        $element[$delta] = array('#markup' => '- ' . t('Private group') . ' -');
      }

      return $element;
  }
}

///////////////////报名参加文字修改end/////////////////////////////